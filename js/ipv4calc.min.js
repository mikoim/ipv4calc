/*
 ipv4calc
 (c) 2015 Eshin Kunishima.

 The MIT License (MIT)
 http://opensource.org/licenses/MIT
*/
var IPv4=function(){function b(){this.cidr=this.subnetMask=this.broadcastAddress=this.networkAddress=this.originalAddress=0}b.padding=function(a,b,c,e){for(var f=0;f<e;f++)switch(c){case 0:a=b+a;break;case 1:a+=b}return a};b.octet=function(a){var d=parseInt(a),c=d.toString(2);if(""===a||0>d||255<d)throw new SyntaxError("out of range");return c=b.padding(c,"0",0,8-c.length)};b.tetco=function(a){var b=parseInt(a,2);if(""===a||0>b||255<b)throw new SyntaxError("out of range");return b};b.dot2dec=function(a){for(var d=
"",c=0;4>c;c++)d+=b.octet(a[c]);return parseInt(d,2)>>>0};b.dec2dot=function(a,d){for(var c=[],e=a.toString(2),e=b.padding(e,"0",0,32-e.length),f=0;4>f;f++)c[f]=d?e.substr(8*f,8):b.tetco(e.substr(8*f,8));return c.join(".")};b.cidr2dec=function(a){var b="";if(0>a||32<a)throw new SyntaxError("out of range (CIDR)");for(var c=0;32>c;c++)b=c<a?b+"1":b+"0";return parseInt(b,2)>>>0};b.dec2cidr=function(a){var d=0;a=a.toString(2);var c=!1;a=b.padding(a,"0",0,32-a.length);for(var e=0;32>e;e++)if("1"!=a[e]||
c)if("0"==a[e])c=!0;else throw new SyntaxError("invalid subnet mask");else d++;return d};b.prototype.parseText=function(a){a=a.replace(/(\.|\/| )/g,".").split(".");console.log(a);switch(a.length){case 4:break;case 5:this.cidr=parseInt(a[4]);this.subnetMask=b.cidr2dec(this.cidr);break;case 8:this.subnetMask=b.dot2dec(a.slice(4,8));this.cidr=b.dec2cidr(this.subnetMask);break;default:throw new SyntaxError("unknown syntax");}this.originalAddress=b.dot2dec(a.slice(0,4));this.networkAddress=(this.subnetMask&
this.originalAddress)>>>0;this.broadcastAddress=(~this.subnetMask|this.originalAddress)>>>0};b.prototype.getOriginalAddress=function(a){return b.dec2dot(this.originalAddress,a)};b.prototype.getNetworkAddress=function(a){return b.dec2dot(this.networkAddress,a)};b.prototype.getBroadcastAddress=function(a){return b.dec2dot(this.broadcastAddress,a)};b.prototype.getSubnetMask=function(a){return b.dec2dot(this.subnetMask,a)};b.prototype.getHostsRange=function(a){return 30>=this.cidr?b.dec2dot(this.networkAddress+
1,a)+" ~ "+b.dec2dot(this.broadcastAddress-1,a):"-"};b.prototype.getAddressClass=function(){return"unimplemented"};b.prototype.getHostsCount=function(){return 30>=this.cidr?this.broadcastAddress-this.networkAddress-1:0};b.prototype.getCIDR=function(){return this.cidr};return b}();
